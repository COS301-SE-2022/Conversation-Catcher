# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main, synchronize]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      #Checking out to the main branch
      - name: Checkout main
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

        #Generates the hashes for the comparison between the origin branch and the upstream development branch
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: 'main'

        #Installs node.js
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      #installs yarn
      - name: Install nx
        run: npm install nx -g
        
        #installs yarn
      - name: Install yarn
        run: npm install yarn -g

      - name: Cache Yarn Packages
        id: cache-yarn-packages
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: yarn-packages-${{ hashFiles('**/yarn.lock') }}

        #installs the yarn lockfile
      - name: Install packages
        run: yarn install --frozen-lockfile

        # Runs a set of commands using the runners shell
      - name: Run affected tests
        run: |
          nx affected --target=test --no-cache --base=[SHA1] --head=[SHA2],
          nx affected --target=lint --no-cache --base=[SHA1] --head=[SHA2],
          nx affected --target=build --no-cache --base=[SHA1] --head=[SHA2],
          nx affected --target=e2e --no-cache --base=[SHA1] --head=[SHA2]

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
